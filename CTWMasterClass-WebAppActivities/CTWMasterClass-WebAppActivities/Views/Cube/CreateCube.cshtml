@model CTWMasterClass_WebAppActivities.Models.Cube

@{
    ViewBag.Title = "CreateCube";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <p class="minorHeading">Create a Cube</p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.SideLength, htmlAttributes: new { @class = "control-label col-sm-6" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.SideLength, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SideLength, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-sm-6" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConstructionMaterial, htmlAttributes: new { @class = "control-label col-sm-6" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.ConstructionMaterial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConstructionMaterial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contents, htmlAttributes: new { @class = "control-label col-sm-6" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.Contents, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contents, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentLocation, htmlAttributes: new { @class = "control-label col-sm-6" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.CurrentLocation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentLocation, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-sm-6" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control", @type = "Date" } })
                @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="container-fluid">
            <div class="row" align="center">
                <div class="col-sm-2">
                    <input type="submit" value="Create Barrel" class="buttonFormatting" />
                </div>
            </div>
        </div>
    </div>
}
